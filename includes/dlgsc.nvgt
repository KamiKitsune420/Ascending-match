int txpos = 0;
timer sctimer;

void sctext(string txt, int ms, string opnsnd, string scsound)
{
    txpos = 0;
    array<string> words;
    int start = 0;

    // Custom word-splitting loop
    for (int i = 0; i <= txt.length(); i++)
    {
        if (i == txt.length() || txt[i] == ' ')
        {
            words.insert_last(txt.substr(start, i - start)); // Add word to the array
            start = i + 1; // Move start to the character after the space
        }
    }

    // Speak the text
    p.play_stationary(opnsnd, false);
    speak(txt);

    while (txpos < words.length())
    {
        if (sctimer.elapsed >= ms)
        {
            p.play_stationary(scsound, false);
            txpos++;  // Move to the next word
            sctimer.restart();
        }

        if (key_pressed(KEY_RETURN))
        {
            p.play_stationary("sounds/dlg.ogg", false);
            break;
        }

        wait(5);
    }

    // Wait for Enter key after text is fully displayed
    while (!key_pressed(KEY_RETURN))
    {
        wait(5);
    }

    // Play sound when Enter is pressed
    p.play_stationary("sounds/dlg.ogg", false);
}
